/** @module dachshund-logger */
'use strict';

const log4js = require('log4js');
const stringUtils = require('string-utils');
const assert = require('assert');

/**
 * Creates a logger which wraps the log4js logger {@link https://www.npmjs.com/package/log4js}
 * @param filename Filename as it is given by the __filename environment variable
 *
 * @example
 * //Include logger in node.js module
 * const logger = require('dachshund-logger').getLogger(__filename);
 *
 * //Use logge in node.js module
 * logger.trace('Trace message');
 * logger.debug('Debug message');
 * logger.info('Info message');
 * logger.warn('Warn message');
 * logger.error('Error message');
 * logger.fatal('Fatal message');
 */
exports.getLogger = function(filename) {
	assert(stringUtils.isNotEmpty(filename), 'Filename is not given');

	let logger = {};
	logger.loggingPath = filename.substring(process.cwd().length);
	logger.logger = log4js.getLogger(logger.loggingPath);

	for (let loggerAttribute in logger.logger)
	{
		logger[loggerAttribute] = logger.logger[loggerAttribute];
	}

	return logger;
};