'use strict';

const logger = require('dachshund-logger').getLogger(__filename);
const resourceTypes = require('resource-types');
const resourceSearch = exports;
const assert = require('assert');

resourceSearch.search = async function(parentResource, resourceMatchFunction, maxDepth, includeHiddenResources, foundResources, depth) {
	foundResources = foundResources || [];
	depth = depth || 0;
	includeHiddenResources = includeHiddenResources || false;

	assert(resourceMatchFunction instanceof Function, "Parameter resourceMatchFunction is not a function");
	assert(parentResource.type === resourceTypes.RESOURCE, "The resource '" + parentResource.path + "' is not a resource.");

	let childResources = await parentResource.getChildResources(includeHiddenResources);

	if (childResources.length > 0)
	{
		const searchedChildResourcePromises = [];
		for (let childResource of childResources)
		{
			if (resourceMatchFunction(childResource, depth))
			{
				foundResources.push(childResource);
			}

			if (maxDepth === undefined || maxDepth < 1 || depth < maxDepth)
			{
				searchedChildResourcePromises.push(resourceSearch.search(childResource, resourceMatchFunction, maxDepth, includeHiddenResources, foundResources, depth + 1));
			}
		}

		await Promise.all(searchedChildResourcePromises);
	}
	return foundResources;
};
