'use strict';

const fs = require('fs-es6-promise');
const pathExists = require('path-exists');
const logger = require('dachshund-logger').getLogger(__filename);
const PROPERTIES_FILE_NAME = ".properties.json";
const nodeProperties = exports;

nodeProperties.load = async function(resourcePath) {
	let properties = {};

	let nodePropertiesPath = "." + resourcePath + "/" + PROPERTIES_FILE_NAME;

	if(await pathExists(nodePropertiesPath) && (await fs.stat(nodePropertiesPath)).isFile())
	{
		let propertyFileData = await fs.readFile(nodePropertiesPath, 'utf8');
		try
		{
			properties = JSON.parse(propertyFileData);
		} catch (err)
		{
			logger.error(`Error while parsing node properties '${nodePropertiesPath}'`, err);
		}
	}

	return properties;
};

nodeProperties.save = async function(resourcePath, properties) {
	let nodePropertiesPath = "." + resourcePath + "/" + PROPERTIES_FILE_NAME;
	properties.timeLastChange = new Date();

	let propertyFileData = JSON.stringify(properties);

	await fs.writeFile(nodePropertiesPath, propertyFileData, 'utf8');
};
